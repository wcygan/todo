apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: todo-app
  labels:
    app.kubernetes.io/name: todo-backend
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2  # For development - scale up for production
  selector:
    matchLabels:
      app.kubernetes.io/name: todo-backend
  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: todo-backend
        app.kubernetes.io/component: api
      annotations:
        # Force rolling update on config changes
        configmap.reloader.stakater.com/reload: "backend-config"
        secret.reloader.stakater.com/reload: "backend-secrets"
    
    spec:
      # Security context
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      
      containers:
      - name: backend
        # Update with your container registry
        image: todo-backend:latest
        imagePullPolicy: IfNotPresent  # Use Always for production
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # Environment variables
        env:
        - name: CONFIG_PATH
          value: "/etc/config/development.json"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: database-url
        - name: ENVIRONMENT
          value: "development"
        
        # Resource limits for development (adjust for production)
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /grpc.reflection.v1alpha.ServerReflection/ServerReflectionInfo
            port: 8080
            httpHeaders:
            - name: Content-Type
              value: application/grpc-web+proto
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /grpc.reflection.v1alpha.ServerReflection/ServerReflectionInfo
            port: 8080
            httpHeaders:
            - name: Content-Type
              value: application/grpc-web+proto
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        
        # Volume mounts
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        
        # Security context for container
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Set to true when possible
          capabilities:
            drop:
            - ALL
      
      # Volumes
      volumes:
      - name: config
        configMap:
          name: backend-config
      
      # Restart policy
      restartPolicy: Always
      
      # Termination grace period
      terminationGracePeriodSeconds: 30
      
      # DNS configuration for service discovery
      dnsPolicy: ClusterFirst
      
      # Node selector for development (optional)
      # nodeSelector:
      #   kubernetes.io/arch: amd64
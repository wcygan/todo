# Production Dockerfile for Go backend - Tilt best practices
FROM golang:1.24.2-alpine AS builder

# Install basic tools
RUN apk add --no-cache git ca-certificates tzdata

WORKDIR /build

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the binary with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build \
    -ldflags="-w -s" \
    -o server \
    ./cmd/server

# Final stage - minimal runtime image
FROM scratch

# Copy timezone data and certificates
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Copy the compiled binary
COPY --from=builder /build/server /server

# Expose port
EXPOSE 8080

# Health check endpoint
HEALTHCHECK --interval=10s --timeout=3s --start-period=5s --retries=3 \
    CMD ["/server", "-health-check"]

# Run the binary
ENTRYPOINT ["/server"]